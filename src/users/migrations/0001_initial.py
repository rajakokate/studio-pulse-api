# Generated by Django 5.2 on 2025-05-20 18:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('ClientID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('deptId', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('deptName', models.TextField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('ProjectID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('ProjectName', models.TextField()),
                ('Status', models.CharField(choices=[('TODO', 'TODO'), ('In Progress', 'In Progress'), ('IN REVIEW', 'IN REVIEW'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], max_length=20)),
                ('DueDate', models.DateTimeField(blank=True, null=True)),
                ('StartDate', models.DateTimeField(blank=True, null=True)),
                ('ClientID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.client')),
            ],
        ),
        migrations.CreateModel(
            name='Shot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shotId', models.IntegerField()),
                ('Status', models.CharField(choices=[('TODO', 'TODO'), ('In Progress', 'In Progress'), ('IN REVIEW', 'IN REVIEW'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], max_length=20)),
                ('reel', models.TextField(blank=True, null=True)),
                ('filepath', models.TextField(blank=True, null=True)),
                ('scene', models.TextField(blank=True, null=True)),
                ('ProjectId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.project')),
            ],
            options={
                'unique_together': {('shotId', 'ProjectId')},
            },
        ),
        migrations.CreateModel(
            name='ShotAssociation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.FloatField(default=1.0)),
                ('assignedFrom', models.TextField(blank=True, null=True)),
                ('assignedDate', models.TextField(blank=True, null=True)),
                ('dueDate', models.TextField(blank=True, null=True)),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.department')),
                ('shot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.shot')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('commentId', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.FloatField()),
                ('comment', models.TextField()),
                ('shot_association', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.shotassociation')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(max_length=100, primary_key=True, serialize=False)),
                ('role', models.TextField()),
                ('password', models.CharField(max_length=128)),
                ('dept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.department')),
                ('groups', models.ManyToManyField(related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='shotassociation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user'),
        ),
        migrations.CreateModel(
            name='ProjectComment',
            fields=[
                ('commentId', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.project')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.user')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='shotassociation',
            unique_together={('version', 'shot', 'user', 'dept')},
        ),
    ]
